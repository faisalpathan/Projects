//
// Button Variables
//


$include-html-button-classes: $include-html-classes !default;


// We use these to build padding for buttons.
$button-med:              emCalc(12px) !default;
$button-tny:              emCalc(7px) !default;
$button-sml:              emCalc(9px) !default;
$button-lrg:              emCalc(16px) !default;

// We use this to control the display property.
$button-display:          inline-block !default;
$button-margin-bottom:    emCalc(20px) !default;

// We use these to control button text styles.
$button-font-family:      inherit !default;
$button-font-color:       #fff !default;
$button-font-color-alt:   #333 !default;
$button-font-med:         emCalc(16px) !default;
$button-font-tny:         emCalc(11px) !default;
$button-font-sml:         emCalc(13px) !default;
$button-font-lrg:         emCalc(20px) !default;
$button-font-weight:      normal !default;
$button-font-align:       center !default;
$button-font-transform:   uppercase !default;

// We use these to control various hover effects.
$button-function-factor:  10% !default;


// We use this to set the default radius used throughout the core.
$button-radius:           $button-radius !default;
$button-round:            $global-rounded !default;

// We use this to set default opacity for disabled buttons.
$button-disabled-opacity: 0.6 !default;


//
// Button Mixins
//

// We use this mixin to create a default button base.
@mixin button-base($style:true, $display:$button-display) {
  @if $style {
    border:0;
    text-transform: $button-font-transform; 
    cursor: pointer;
    border-radius: 0;
    font-family: $button-font-family;
    font-weight: $button-font-weight;
    line-height: 1;
    margin: 0 0 $button-margin-bottom;
    position: relative;
    text-decoration: none;
    text-align: $button-font-align;
    @include single-transition();
  }
  @if $display { display: $display; }
}

// We use this mixin to add button size styles
@mixin button-size($padding:$button-med, $full-width:false, $is-input:false) {

  // We control which padding styles come through,
  // these can be turned off by setting $padding:false
  @if $padding {
    padding-top: $padding;
    padding-#{$opposite-direction}: $padding * 2;
    padding-bottom: $padding + emCalc(1px);
    padding-#{$default-float}: $padding * 2;

    // We control the font-size based on mixin input.
    @if      $padding == $button-med { font-size: $button-font-med; }
    @else if $padding == $button-tny { font-size: $button-font-tny; }
    @else if $padding == $button-sml { font-size: $button-font-sml; }
    @else if $padding == $button-lrg { font-size: $button-font-lrg; }
    @else                     { font-size: $padding - emCalc(2px); }
  }

  // We can set $full-width:true to remove side padding extend width.
  @if $full-width {
    // We still need to check if $padding is set.
    @if $padding {
    padding-top: $padding;
    padding-bottom: $padding + emCalc(1px);
    } @else if $padding == false {
      padding-top:0;
      padding-bottom:0;
    }
    padding-right: 0px;
    padding-left: 0px;
    width: 100%;
  }

  // <input>'s and <button>'s take on strange padding. We added this to help fix that.
  @if $is-input == $button-lrg {
    padding-top: $is-input + emCalc(.5px);
    padding-bottom: $is-input + emCalc(.5px);
  }
  @else if $is-input {
    padding-top: $is-input + emCalc(1px);
    padding-bottom: $is-input;
  }
}

// We use this mixin to add button color styles
@mixin button-style($bg:$primary-color, $radius:false, $disabled:false) {

  // We control which background styles are used,
  // these can be removed by setting $bg:false
  @if $bg {
    // This find the lightness percentage of the background color.
    $bg-lightness: lightness($bg);
    background-color: $bg;
    border-color: $bg;
    &:hover,
    &:focus { -webkit-box-shadow: inset 0px 150px 20px 50px rgba(0, 0, 0, 0.2);
    box-shadow: inset 0px 150px 20px 50px rgba(0, 0, 0, 0.2); }

    // We control the text color for you based on the background color.
    @if $bg-lightness > 70% {
      color: $button-font-color-alt;
      &:hover,
      &:focus { color: $button-font-color-alt; }
    }
    @else {
      color: $button-font-color;
      &:hover,
      &:focus { color: $button-font-color; }
    }
  }

  // We can set $disabled:true to create a disabled transparent button.
  @if $disabled {
    cursor: default;
    opacity: $button-disabled-opacity;
    -webkit-box-shadow: none;
    box-shadow: none;
    &:hover,
    &:focus { background-color: $bg; }
  }



}

// We use this to quickly create buttons with a single mixin. As @jaredhardy puts it, "the kitchen sink mixin"
@mixin button($padding:$button-med, $bg:$primary-color, $radius:false, $full-width:false, $disabled:false, $is-input:false, $is-prefix:false) {
  @include button-base;
  @include button-size($padding, $full-width, $is-input);
  @include button-style($bg, $radius, $disabled);
}


//
// Button Classes
//

// Only include these classes if the variable is true, otherwise they'll be left out.
@if $include-html-button-classes != false {

  // Default styles applied outside of media query

  #submit ,button, .button, input[type="submit"] {
    @include button-base;
    @include button-size;
    @include button-style;

    &.secondary { @include button-style($bg:$secondary-color); }
    &.white { @include button-style($bg:#FFF); }
    &.success   { @include button-style($bg:$success-color); }
    &.alert     { @include button-style($bg:$alert-color); }

    &.large  { @include button-size($padding:$button-lrg); }
    &.small  { @include button-size($padding:$button-sml); }
    &.tiny   { @include button-size($padding:$button-tny); }
    &.expand { @include button-size($padding:null,$full-width:true); }

    &.left-align  { text-align: left; text-indent: emCalc(12px); }
    &.right-align { text-align: right; padding-right: emCalc(12px); }

    &.disabled, &[disabled] { @include button-style($bg:$primary-color, $disabled:true);
      &.secondary { @include button-style($bg:$secondary-color, $disabled:true); }
      &.white { @include button-style($bg:#eee); }
      &.success { @include button-style($bg:$success-color, $disabled:true); }
      &.alert { @include button-style($bg:$alert-color, $disabled:true); }
    }

  }

  #submit, button, .button,  input[type="submit"] {
    @include button-size($padding:false, $is-input:$button-med);
    &.tiny { @include button-size($padding:false, $is-input:$button-tny); }
    &.small { @include button-size($padding:false, $is-input:$button-sml); }
    &.large { @include button-size($padding:false, $is-input:$button-lrg); }
  }

  // Styles for any browser or device that support media queries
  @media only screen {



 #submit,  button, .button,  input[type="submit"] {
      &.large  { @include button-size($padding:false, $full-width:false); }
      &.small  { @include button-size($padding:false, $full-width:false); }
      &.tiny   { @include button-size($padding:false, $full-width:false); }

      &.radius { @include button-style($bg:false, $radius:true); }
      &.round  { @include button-style($bg:false, $radius:$button-round); }
    }

  }

  // Additional styles for screens larger than 768px
   @media only screen and (min-width:$small-screen){
   #submit, button, .button, input[type="submit"] {
      @include button-base($style:false, $display:inline-block);
      @include button-size($padding:false, $full-width:false);
    }

  }

}

/* alternative button styles*/
.button.alt-button:hover{box-shadow: none!important;background-color:$primary-color!important};
.primary.alt-button:hover{background-color:$primary-color!important}
.secondary.alt-button:hover{background-color:$secondary-color!important}
.alert.alt-button:hover{background-color:$alert-color!important}
.success.alt-button:hover{background-color:$success-color!important}

.button.success.alt-button{color: $success-color}
.button.alert.alt-button{color: $alert-color}

.secondary.alt-button{color: $secondary-color;} 

.alt-button{color: $primary-color;}
.alt-button{background-color: transparent!important;border-width: 2px!important; border-style: solid!important;}
.alt-button:hover{color: #FFF!important;}

.button.white.alt-button{color: #FFF;} 
.button.white.alt-button:hover{color:#000!important;background-color: #FFF!important;}
.button.black.alt-button{color: #333;}
.button.black.alt-button:hover{color:#000!important;background-color: #FFF!important;} 

.facebook-button{background-color: #3a589d!important}

.ux_banner .button{padding-top: 0.93em; padding-bottom: 1em;}
.ux_banner .button.alt-button{padding-top: 0.80em; padding-bottom: 0.90em;}

.button.added{
  display: none;
}

.added_to_cart.wc-forward{
  display: inline-block;
}